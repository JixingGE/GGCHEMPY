###=====================================================================
from scipy.interpolate import interp1d
import numpy as np

def H2_CO_self_shielding(specx,Av,xh2,xco,xkin):
    ###---------------------------------------------------------------------
    ### Ref: Lee et al., A&A, 311, 690-707
    ### Treat the H2 and CO self-shielding.
    ### INPUT:
    ###      specx --- 'H2' or 'CO'
    ###      Av    --- extinction (mag)
    ###      xh2   --- H2 abundance
    ###      xco   --- CO abundance
    ### OUTPUT:
    ###      xk    --- new rate coefficient with consideration of 
    ###                self-shielding of H2 or CO
    ###---------------------------------------------------------------------
    pnx = 5.34e-22
    ph2 = 2.54e-11
    pco = 1.03e-10
    nh2 = [ 0.000E+00, 3.690E+11, 3.715E+12, 3.948E+13, 1.233E+14,
            2.536E+14, 4.342E+14, 6.653E+14, 6.689E+14, 9.075E+14,\
            1.234E+15, 1.631E+15, 2.105E+15, 2.363E+15, 2.899E+15,\
            3.207E+15, 3.848E+15, 4.636E+15, 5.547E+15, 6.604E+15,\
            7.855E+15, 9.368E+15, 1.122E+16, 1.352E+16, 1.643E+16,\
            2.017E+16, 2.515E+16, 3.190E+16, 4.128E+16, 5.439E+16,\
            7.315E+16, 1.009E+17, 1.432E+17, 2.092E+17, 3.123E+17,\
            4.738E+17, 5.388E+17, 8.935E+17, 1.381E+18, 2.164E+18,\
            3.330E+18, 5.024E+18, 7.404E+18, 9.029E+18, 1.316E+19,\
            1.813E+19, 2.453E+19, 3.248E+19, 4.216E+19, 5.370E+19,\
            6.722E+19, 8.277E+19, 9.894E+19, 1.186E+20, 1.404E+20,\
            1.644E+20, 1.908E+20, 2.197E+20, 2.510E+20, 2.849E+20,\
            3.214E+20, 3.604E+20, 4.019E+20, 4.456E+20, 4.915E+20,\
            5.393E+20, 5.886E+20, 6.392E+20, 6.909E+20, 8.505E+20,\
            7.433E+20, 7.965E+20, 9.056E+20, 9.627E+20, 1.011E+21,\
            1.068E+21, 1.125E+21, 1.185E+21, 1.250E+21, 1.327E+21,\
            1.428E+21, 1.578E+21, 1.851E+21, 2.128E+21, 2.298E+21,\
            2.389E+21, 2.459E+21, 2.519E+21, 2.571E+21, 2.618E+21,\
            2.707E+21, 2.790E+21, 2.887E+21, 3.001E+21, 3.139E+21,\
            3.303E+21, 3.497E+21, 3.722E+21, 3.983E+21, 4.283E+21,\
            4.644E+21, 5.127E+21, 5.945E+21, 8.205E+21, 1.015E+22 ]
      
    theta_nh2 =[1.000E+00, 9.983E-01, 9.853E-01, 8.761E-01, 7.199E-01,\
           5.728E-01, 4.455E-01, 3.431E-01, 3.418E-01, 2.732E-01,\
           2.110E-01, 1.619E-01, 1.236E-01, 1.084E-01, 8.447E-02,\
           7.410E-02, 5.774E-02, 4.416E-02, 3.390E-02, 2.625E-02,\
           2.048E-02, 1.606E-02, 1.264E-02, 9.987E-03, 7.937E-03,\
           6.343E-03, 5.088E-03, 4.089E-03, 3.283E-03, 2.640E-03,\
           2.130E-03, 1.725E-03, 1.397E-03, 1.129E-03, 9.097E-04,\
           7.340E-04, 6.883E-04, 5.377E-04, 4.352E-04, 3.475E-04,\
           2.771E-04, 2.205E-04, 1.753E-04, 1.549E-04, 1.210E-04,\
           9.666E-05, 7.705E-05, 6.148E-05, 4.904E-05, 3.909E-05,\
           3.112E-05, 2.473E-05, 1.997E-05, 1.578E-05, 1.244E-05,\
           9.769E-06, 7.634E-06, 5.932E-06, 4.581E-06, 3.515E-06,\
           2.679E-06, 2.029E-06, 1.527E-06, 1.144E-06, 8.523E-07,\
           6.332E-07, 4.693E-07, 3.475E-07, 2.574E-07, 1.047E-07,\
           1.907E-07, 1.413E-07, 7.739E-08, 5.677E-08, 4.386E-08,\
           3.227E-08, 2.385E-08, 1.750E-08, 1.248E-08, 8.389E-09,\
           5.026E-09, 2.382E-09, 6.259E-10, 1.653E-10, 7.399E-11,\
           4.824E-11, 3.474E-11, 2.633E-11, 2.069E-11, 1.663E-11,\
           1.099E-11, 7.506E-12, 4.825E-12, 2.864E-12, 1.534E-12,\
           7.324E-13, 3.087E-13, 1.135E-13, 3.591E-14, 9.689E-15,\
           2.045E-15, 2.618E-16, 8.918E-18, 3.041E-21, 1.739E-23]

    nco=[ 0.000E+00, 1.000E+12, 1.650E+12, 2.995E+12, 5.979E+12,\
           1.313E+13, 3.172E+13, 8.429E+13, 2.464E+14, 7.923E+14,\
           1.670E+15, 2.595E+15, 4.435E+15, 6.008E+15, 8.952E+15,\
           1.334E+16, 1.661E+16, 2.274E+16, 3.115E+16, 4.266E+16,\
           5.843E+16, 8.002E+16, 1.096E+17, 1.501E+17, 2.055E+17,\
           2.815E+17, 4.241E+17, 6.389E+17, 9.625E+17, 1.450E+18,\
           2.184E+18, 3.291E+18, 4.124E+18, 5.685E+18, 7.838E+18,\
           1.080E+19, 1.285E+19, 1.681E+19, 2.199E+19, 2.538E+19,\
           3.222E+19, 4.091E+19, 5.193E+19, 5.893E+19, 7.356E+19,\
           8.269E+19, 9.246E+19, 1.031E+20, 1.148E+20, 1.277E+20,\
           1.419E+20, 1.578E+20      ]

    theta_nco=[1.000E+00, 9.990E-01, 9.981E-01, 9.961E-01, 9.912E-01,\
              9.815E-01, 9.601E-01, 9.113E-01, 8.094E-01, 6.284E-01,\
              4.808E-01, 3.889E-01, 2.827E-01, 2.293E-01, 1.695E-01,\
              1.224E-01, 1.017E-01, 7.764E-02, 5.931E-02, 4.546E-02,\
              3.506E-02, 2.728E-02, 2.143E-02, 1.700E-02, 1.360E-02,\
              1.094E-02, 8.273E-03, 6.283E-03, 4.773E-03, 3.611E-03,\
              2.704E-03, 1.986E-03, 1.657E-03, 1.258E-03, 9.332E-04,\
              6.745E-04, 5.596E-04, 4.123E-04, 2.982E-04, 2.490E-04,\
              1.827E-04, 1.324E-04, 9.473E-05, 7.891E-05, 5.668E-05,\
              4.732E-05, 3.967E-05, 3.327E-05, 2.788E-05, 2.331E-05,\
              1.944E-05, 1.619E-05      ]

    nh2_co=[ 0.000E+00, 2.666E+13, 3.801E+14, 6.634E+15, 8.829E+16,\
             9.268E+17, 1.007E+18, 2.021E+18, 3.036E+18, 4.051E+18,\
             5.066E+18, 6.082E+18, 7.097E+18, 8.112E+18, 9.341E+18,\
             1.014E+19, 2.030E+19, 3.045E+19, 4.061E+19, 5.076E+19,\
             6.092E+19, 7.107E+19, 8.123E+19, 9.353E+19, 1.015E+20,\
             2.031E+20, 3.047E+20, 4.062E+20, 5.078E+20, 6.094E+20,\
             7.109E+20, 8.125E+20, 9.355E+20, 1.016E+21, 2.031E+21,\
             3.047E+21, 4.063E+21, 5.078E+21, 6.094E+21, 7.110E+21,\
             8.125E+21, 9.355E+21, 1.016E+22 ]

    theta_nh2_co=[1.000E+00, 9.999E-01, 9.893E-01, 9.678E-01, 9.465E-01,\
                 9.137E-01, 9.121E-01, 8.966E-01, 8.862E-01, 8.781E-01,\
                 8.716E-01, 8.660E-01, 8.612E-01, 8.569E-01, 8.524E-01,\
                 8.497E-01, 8.262E-01, 8.118E-01, 8.010E-01, 7.921E-01,\
                 7.841E-01, 7.769E-01, 7.702E-01, 7.626E-01, 7.579E-01,\
                 7.094E-01, 6.712E-01, 6.378E-01, 6.074E-01, 5.791E-01,\
                 5.524E-01, 5.271E-01, 4.977E-01, 4.793E-01, 2.837E-01,\
                 1.526E-01, 7.774E-02, 3.952E-02, 2.093E-02, 1.199E-02,\
                 7.666E-03, 5.333E-03, 4.666E-03      ]

    av_co=[ 0.000E+00, 1.000E-07, 1.000E-06, 1.000E-05, 1.000E-04,\
            1.000E-03, 1.086E-03, 2.171E-03, 3.257E-03, 4.343E-03,\
            5.429E-03, 6.514E-03, 7.600E-03, 8.686E-03, 1.000E-02,\
            1.086E-02, 2.171E-02, 3.257E-02, 4.343E-02, 5.429E-02,\
            6.514E-02, 7.600E-02, 8.686E-02, 1.000E-01, 1.086E-01,\
            2.171E-01, 3.257E-01, 4.343E-01, 5.429E-01, 6.514E-01,\
            7.600E-01, 8.686E-01, 1.000E+00, 1.086E+00, 2.171E+00,\
            3.257E+00, 4.343E+00, 5.429E+00, 6.514E+00, 7.600E+00,\
            8.686E+00, 1.000E+01, 1.086E+01      ]

    theta_av_co=[ 1.000E+00, 1.000E+00, 1.000E+00, 1.000E+00, 9.991E-01,\
                 9.887E-01, 9.877E-01, 9.755E-01, 9.638E-01, 9.524E-01,\
                 9.413E-01, 9.306E-01, 9.202E-01, 9.101E-01, 8.983E-01,\
                 8.908E-01, 8.081E-01, 7.422E-01, 6.875E-01, 6.404E-01,\
                 5.990E-01, 5.620E-01, 5.284E-01, 4.916E-01, 4.696E-01,\
                 2.757E-01, 1.705E-01, 1.084E-01, 7.013E-02, 4.593E-02,\
                 3.037E-02, 2.023E-02, 1.247E-02, 9.130E-03, 2.133E-04,\
                 6.269E-06, 2.108E-07, 7.633E-09, 2.873E-10, 1.102E-11,\
                 4.273E-13, 8.412E-15, 6.510E-16      ]
    xkold=xkin
    if specx=='H2':
        theta=0.0
        ncollh2=(Av/pnx)*xh2
        if ncollh2 >nh2[104]:
            xk=xkold
        else:
            theta = interp1d(nh2,theta_nh2)(ncollh2)
            xk    = ph2*theta
        #print("(%s,' : self-shielding:',%10.3e,' =>',%10.3e)"%(specx,xkold,xk))
    elif specx=='CO':
        theta1=0.0; theta2=0.0; theta3=0.0
        ncollh2=(Av*pnx)*xh2
        ncollco=(Av*pnx)*xco
        if ncollh2>nh2_co[42] or ncollco>nco[51] or Av>av_co[42] or xkin==0.0:
            xk=xkold
        else:
            theta1 = interp1d(nco,    theta_nco )(ncollco)
            theta2 = interp1d(nh2_co, theta_nh2_co )(ncollh2)
            theta3 = interp1d(av_co,  theta_av_co )(Av)
            xk     = pco*theta1*theta2*theta3
        
        #print("%s,': self-shielding:',%10.3e,' =>',%10.3e)"%(specx,xkold,xk))
    return xk

def reactive_desorption_2016(dtH,Natoms,mass,Ebind,EM):
    """ref: Minissale et al., A&A 585, A24 (2016)
       dtH    !!! K. energy released by formation reaction.
       Natoms !!! number of atoms in species
       EM     !!! amu. effective mass of the surface element
       mass   !!! amu.
       Ebind  !!! K.
       ee     !!! fraction of kinetic energy retained by the reaction product
       NVM    !!! number of vibrational modes in a molecule-surface bond system
       RRD    !!! efficiency of reactive desorption
       
       EXAMPLE:
       RRD = reactive_desorption_2016(1000.0,3.0,20.0,800.0,100.0)
       rc = rc*RRD        ### for JA + JB -> C
       rc = rc*(1.0-RRD)  ### for JA + JB -> JC
    """
    NVM = 3.0*Natoms
    ee = ( (EM-mass)/(mass+EM) )**2
    RRD= np.exp( -Ebind*NVM/(ee*dtH) )
    return RRD

def reactive_desorption_2007(b,Natoms,Ebind,aa=0.01):
    """
    Ref: Garrod et al.,(2007), A&A 467, 1103â€“1115 
    b  = energy released by reaction (KJ/mol)
    aa = 0.01, 0.03 or 0.1
    EXAMPLE:
       f = reactive_desorption_2007(1000.0,3.0,20.0,800.0,100.0)
       rc = rc*f        ### for JA + JB -> C
       rc = rc*(1.0-f)  ### for JA + JB -> JC
    """
    enthalpy = np.abs(b * 120.274) ###unit: kJ/mol -> K
    svmode   = 0.0
    if (Natoms ==2.0 ):
        svmode = 2.0
    else:
        svmode = 3.0*Natoms-5.0
    p = (1.0 - Ebind/enthalpy)**(svmode-1)
    f = aa*p/(1.0+aa*p)
    return f
                     
